openapi: 3.0.0
info:
  title: Gateway Service API
  version: 0.0.1
  description: Gateway Service OpenAPI specification.

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /user/adduser:
    post:
      summary: Add a new user to the database
      tags:
        - User
      description: Add a new user to the system with provided username, password, and email.
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                password:
                  type: string
                  description: The password of the user.
                email:
                  type: string
                  format: email
                  description: The email address of the user.
              required:
                - username
                - password
                - email
      responses:
        '200':
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: The username of the newly created user.
        '400':
          description: Invalid input or server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message generated by the server"


  /user/editUser:
    post:
      summary: Update the stats of a user
      tags:
        - User
      description: Edit a user in the system to update the total and correct questions answered.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user to be updated.
                questions_answered:
                  type: integer
                  description: The number of questions answered to be added to the user's total.
                correctly_answered_questions:
                  type: integer
                  description: The number of correctly answered questions to be added to the user's total.
              required:
                - username
                - questions_answered
                - correctly_answered_questions
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User updated
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /auth/login:
    post:
      summary: Authenticate a user by providing username and password.
      tags:
            - Authentication
      description: Logs in a user given an existing username and password are provided
      requestBody:
        required: true
        description: User credentials for authentication.
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - username
                - password
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for accessing protected endpoints.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /health:
    get:
      summary: Health check endpoint
      tags:
            - General
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK

  /GetQuestions:
    get:
      summary: Get questions from Wikidata service
      tags:
            - Wikidata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
        '500':
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /GetCapitalsQuestions:
    get:
      summary: Get capital questions
      tags:
            - Wikidata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
        '500':
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /GetElementSymbolsQuestions:
    get:
      summary: Get element symbol questions
      tags:
            - Wikidata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
        '500':
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /GetMovieDirectorsQuestions:
    get:
      summary: Get movie director questions
      tags:
            - Wikidata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
        '500':
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /:
    get:
      summary: Catch-all endpoint
      tags:
            - General
      responses:
        '404':
          description: Endpoint not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Endpoint not found
tags:
  - name: User
    description: Endpoints related to user management.
  - name: Authentication
    description: Endpoints related to user authentication.
  - name: Wikidata
    description: Endpoints related to wikidata.
  - name: General
    description: General endpoints for an application